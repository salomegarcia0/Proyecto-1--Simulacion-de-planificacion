/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import java.util.concurrent.ThreadLocalRandom;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.BufferedReader;
import java.io.FileReader;
import main.CPU;
import Estructuras_de_Datos.*;
import Modelado_de_procesos.*;
import Politicas_de_Planificacion.*;

/**
 *
 * @author pjroj
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nombreArchivo = new javax.swing.JLabel();
        cargarArchivo = new javax.swing.JButton();
        inicio = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel3.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(253, 253, 253));
        jLabel3.setText("(Solo archivos de tipo .txt)");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("(Solo archivos de tipo .csv)");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 240, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Nombre del archivo cargado:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        nombreArchivo.setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        nombreArchivo.setForeground(new java.awt.Color(51, 51, 51));
        nombreArchivo.setText("...");
        jPanel2.add(nombreArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 300, 20));

        cargarArchivo.setBackground(new java.awt.Color(51, 0, 102));
        cargarArchivo.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        cargarArchivo.setForeground(new java.awt.Color(255, 255, 255));
        cargarArchivo.setText("Carga Archivo");
        cargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarArchivoActionPerformed(evt);
            }
        });
        jPanel2.add(cargarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 250, 90));

        inicio.setBackground(new java.awt.Color(51, 0, 102));
        inicio.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        inicio.setForeground(new java.awt.Color(255, 255, 255));
        inicio.setText("Iniciar programa");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });
        jPanel2.add(inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 120, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 520, 210));

        jLabel2.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Carga tu archivo con los procesos");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 20, 610, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarArchivoActionPerformed
        //Para cargar el archivo
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".csv", "csv");
        file.setFileFilter(filter);
        file.setAcceptAllFileFilterUsed(false);
        int result = file.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            CPU.setFile(file.getSelectedFile());
            nombreArchivo.setText(CPU.getFile().getName());
            JOptionPane.showMessageDialog(null, "Su archivo a sido cargado con exito, haga click en 'Iniciar programa'");
        }
    }//GEN-LAST:event_cargarArchivoActionPerformed
    
    private boolean FileIsEmpty(){
        return CPU.getFile() == null;
    }
    
    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        
        if (FileIsEmpty()){
            //SE MUESTRA UN MENSAJE DE ERROR EN CASO DE QUE NO SE HAYA SELECCIONADO NINGUN ARCHIVO
            JOptionPane.showMessageDialog(null, "Debe seleccionar un archivo primero");
        }else{
            //CODIGO PARA LEERLO//
            String filePath = CPU.getFile().getAbsolutePath();
            //Se crea la cola inicial para cargar los procesos
            Cola colaprocesos = new Cola();
            
            try {
            // Crear un objeto BufferedReader para leer el archivo
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            String linea;
            String separador = ",";
            int cont = 0;
            
            //para verificación durante la lectura
            boolean readingProcesos = true;
            // Leer las siguientes líneas del archivo (datos)
            while ((linea = br.readLine()) != null) {
                // con cont > 0 se evita leer la primera línea del archivo (encabezado)
                if (cont > 0){
                    // Dividir la línea por el separador y guardar los campos en un arreglo
                    String[] campos = linea.split(separador);
                    //Crear un objeto proceso con los campos leídos
                    int procesoID = ThreadLocalRandom.current().nextInt(111111, 999999); //esto debe ser un random                   
                    String procesoNombre = campos[0]; 
                    int instruccionesTotal = Integer.parseInt(campos[1]); 
                    //RESOLVER DETALLE DEL TIPO
                    TipoProceso tipo = TipoProceso.CPU_BOUND;
                    int ioExceptionCycle = 10; //por default
                    int ioCompletionTime = 5; //por default
                    if (campos[2].equals("IO_BOUND")){
                        tipo = TipoProceso.IO_BOUND;
                    }
                    if (campos[2].equals("CPU_BOUND")){
                        tipo = TipoProceso.CPU_BOUND;
                        ioExceptionCycle = 0;
                        ioCompletionTime = 0;
                    }

                    long tiempoCreacion = Long.parseLong(campos[3]);
                    long tiempoServicio = Long.parseLong(campos[4]);
                    int memoria = Integer.parseInt(campos[5]);

                    PCB proceso = new PCB(procesoID,procesoNombre,instruccionesTotal,tipo,ioExceptionCycle,ioCompletionTime,tiempoCreacion,tiempoServicio,memoria);
                    // Agregar el objeto Nodo(PCB) a la cola de procesos
                    colaprocesos.enColar(proceso);
                }
                cont += 1;
                                
            }
            
            //se guarda la cola de procesos inicial en el global para su uso (sin ordenar ni nada
            CPU.setInicial(colaprocesos);
            colaprocesos.print();
            // Cerrar el objeto BufferedReader
            br.close();
            
            //se crean todas las colas iniciales
            CPU.setListo(new Cola());
            CPU.setListosSuspendido(new Cola());
            CPU.setBloqueadosSuspendido(new Cola());
            CPU.setBloqueado(new Cola());
            CPU.setTerminado(new Cola());
            
            
            //Cola prueba = CPU.getInicial();
            FCFS planificador = new FCFS();
            //planificador.planificacionFCFS();

            //Cargar la siguiente ventana,Ventana2 
            Ventana2 ventana2 = new Ventana2();
            ventana2.setVisible(true);
            this.dispose();
            
            } catch (Exception e) {
                // Mostrar por consola el mensaje de la excepción y una sugerencia general
                JOptionPane.showMessageDialog(null,"Error al leer el archivo: "+e.getMessage()+"\nVerifique que no haya espacios vacios o ',' extra   etc");
            }
            
        }
    }//GEN-LAST:event_inicioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargarArchivo;
    private javax.swing.JButton inicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel nombreArchivo;
    // End of variables declaration//GEN-END:variables
}
